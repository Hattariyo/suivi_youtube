import streamlit as st
import pandas as pd
import plotly.express as px

# Liens Google Drive en mode "t√©l√©chargement direct"
HISTORIQUE_URL = "https://drive.google.com/uc?id=1Oi5kWc173-Z4ecnySTkbz6hffuYigXri"
CLASSEMENT_URL = "https://drive.google.com/uc?id=1c0LeysCYhrKr6JaXD6w-XCHmPMwpXvAu"

# Chargement des donn√©es
@st.cache_data
def load_data():
    historique = pd.read_csv(HISTORIQUE_URL)
    classement = pd.read_csv(CLASSEMENT_URL)
    return historique, classement

historique, classement = load_data()

# Titre du dashboard
st.title("üéüÔ∏è Suivi du concours YouTube - Les Tr√©sors d'Ulysse")

# S√©lection automatique de la vid√©o d'Ulysse
videos = classement["title"].tolist()
selected_videos = st.multiselect("Choisis les vid√©os √† afficher :", videos, default=["Les tr√©sors d'Ulysse"])

# S√©lecteur du type de donn√©es √† afficher
metric = st.radio("Afficher :", ["Likes", "Rang"], horizontal=True)

# Filtrage de l'historique pour les vid√©os s√©lectionn√©es
historique_selected = historique[historique["title"].isin(selected_videos)]

# Graphique d'√©volution des likes ou du rang
if metric == "Likes":
    fig = px.line(
        historique_selected,
        x="timestamp",
        y="likes",
        color="title",
        title="√âvolution des likes",
        width=800, height=400
    )
    fig.update_yaxes(title="likes")
else:
    fig = px.line(
        historique_selected,
        x="timestamp",
        y="rank",
        color="title",
        title="√âvolution du rang",
        width=800, height=400
    )
    fig.update_yaxes(title="rang", autorange="reversed")

st.plotly_chart(fig)

# üèÜ Tableau du classement des 20 vid√©os
st.markdown("""
### üèÜ Classement des 20 premi√®res vid√©os
""")
top20_df = classement.sort_values("rank").head(20)[["title", "likes", "views"]]
st.dataframe(top20_df)

# üìä Graphique de l'√©volution du top 20 (likes)
fig_likes = px.line(
    historique[historique["video_id"].isin(top20_df["video_id"])],
    x="timestamp",
    y="likes",
    color="title",
    title="√âvolution des likes pour les 20 premi√®res vid√©os",
    width=800, height=400
)
st.plotly_chart(fig_likes)

# üìä Graphique de l'√©volution du classement (rang) du top 20
fig_rank = px.line(
    historique[historique["video_id"].isin(top20_df["video_id"])],
    x="timestamp",
    y="rank",
    color="title",
    title="Classement dans le temps pour les 20 premi√®res vid√©os",
    width=800, height=400
)
fig_rank.update_yaxes(title="rang", autorange="reversed")
st.plotly_chart(fig_rank)
